
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightNOTID AND OR NOT TRUE FALSE LPAREN RPARENexpression : expression_false\n        | expression_trueexpression_true : TRUE\n        | expression_true AND expression_true\n        | expression_true OR expression_true\n        | expression_true OR expression_false\n        | expression_false OR expression_true\n        | NOT expression_false\n        | LPAREN expression_true RPARENexpression_false : FALSE\n        | NOT expression_true\n        | expression_false AND expression_false\n        | expression_true AND expression_false\n        | expression_false AND expression_true\n        | expression_false OR expression_false\n        | LPAREN expression_false RPARENexpression : ID'
    
_lr_action_items = {'ID':([0,],[1,]),'FALSE':([0,3,4,11,12,15,16,17,18,25,26,],[2,2,2,2,2,2,2,2,2,2,2,]),'RPAREN':([2,5,9,10,13,14,19,20,21,22,23,24,27,28,29,30,31,32,33,34,35,36,37,38,],[-10,-3,19,20,-11,-8,-9,-16,-11,-8,19,20,-5,-6,-4,-13,-14,-12,-7,-15,-4,-13,-7,-15,]),'LPAREN':([0,3,4,11,12,15,16,17,18,25,26,],[3,3,12,3,12,12,3,3,3,12,12,]),'NOT':([0,3,4,11,12,15,16,17,18,25,26,],[4,4,11,4,11,11,4,4,4,11,11,]),'TRUE':([0,3,4,11,12,15,16,17,18,25,26,],[5,5,5,5,5,5,5,5,5,5,5,]),'AND':([2,5,6,7,9,10,13,14,19,20,21,22,23,24,27,28,29,30,31,32,33,34,35,36,37,38,],[-10,-3,16,17,16,17,-11,-8,-9,-16,-11,-8,25,17,25,17,-4,-13,-14,-12,16,17,-4,-13,25,17,]),'$end':([1,2,5,6,7,8,13,14,19,20,21,22,27,28,29,30,31,32,33,34,35,36,37,38,],[-17,-10,-3,-2,-1,0,-11,-8,-9,-16,-11,-8,-5,-6,-4,-13,-14,-12,-7,-15,-4,-13,-7,-15,]),'OR':([2,5,6,7,9,10,13,14,19,20,21,22,23,24,27,28,29,30,31,32,33,34,35,36,37,38,],[-10,-3,15,18,15,18,-11,-8,-9,-16,-11,-8,15,26,-5,-6,-4,-13,-14,-12,-7,-15,-4,-13,-7,-15,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression_true':([0,3,4,11,12,15,16,17,18,25,26,],[6,9,13,21,23,27,29,31,33,35,37,]),'expression_false':([0,3,4,11,12,15,16,17,18,25,26,],[7,10,14,22,24,28,30,32,34,36,38,]),'expression':([0,],[8,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression_false','expression',1,'p_expression','boolean.py',66),
  ('expression -> expression_true','expression',1,'p_expression','boolean.py',67),
  ('expression_true -> TRUE','expression_true',1,'p_expression_true','boolean.py',71),
  ('expression_true -> expression_true AND expression_true','expression_true',3,'p_expression_true','boolean.py',72),
  ('expression_true -> expression_true OR expression_true','expression_true',3,'p_expression_true','boolean.py',73),
  ('expression_true -> expression_true OR expression_false','expression_true',3,'p_expression_true','boolean.py',74),
  ('expression_true -> expression_false OR expression_true','expression_true',3,'p_expression_true','boolean.py',75),
  ('expression_true -> NOT expression_false','expression_true',2,'p_expression_true','boolean.py',76),
  ('expression_true -> LPAREN expression_true RPAREN','expression_true',3,'p_expression_true','boolean.py',77),
  ('expression_false -> FALSE','expression_false',1,'p_expression_false','boolean.py',82),
  ('expression_false -> NOT expression_true','expression_false',2,'p_expression_false','boolean.py',83),
  ('expression_false -> expression_false AND expression_false','expression_false',3,'p_expression_false','boolean.py',84),
  ('expression_false -> expression_true AND expression_false','expression_false',3,'p_expression_false','boolean.py',85),
  ('expression_false -> expression_false AND expression_true','expression_false',3,'p_expression_false','boolean.py',86),
  ('expression_false -> expression_false OR expression_false','expression_false',3,'p_expression_false','boolean.py',87),
  ('expression_false -> LPAREN expression_false RPAREN','expression_false',3,'p_expression_false','boolean.py',88),
  ('expression -> ID','expression',1,'p_expression_id','boolean.py',93),
]
